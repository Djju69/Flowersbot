"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend
sys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))

from backend.main import engine, Product, Base
from sqlalchemy.orm import sessionmaker

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)

def add_test_products():
    """–î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
    Base.metadata.create_all(bind=engine)
    
    db = SessionLocal()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–æ–≤–∞—Ä—ã
        existing_count = db.query(Product).count()
        if existing_count > 0:
            print(f"–í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} —Ç–æ–≤–∞—Ä–æ–≤")
            return
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã (—Ü–µ–Ω—ã –≤ VND)
        products = [
            {
                "name": "üåπ –†–æ–∑—ã –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ",
                "category": "roses",
                "description": "–ö—Ä–∞—Å–Ω—ã–µ —Ä–æ–∑—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–π —É–ø–∞–∫–æ–≤–∫–µ. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤.",
                "price": 800000,  # 800,000 VND
                "photo_url": "https://images.unsplash.com/photo-1518895949257-7621c3c786d7?w=400",
                "is_popular": True,
                "is_express": True
            },
            {
                "name": "üå∫ –¢—Ä–æ–ø–∏—á–µ—Å–∫–∏–π —Ä–∞–π",
                "category": "exotic",
                "description": "–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ü–≤–µ—Ç—ã –∏–∑ —Ç—Ä–æ–ø–∏–∫–æ–≤. –Ø—Ä–∫–∏–µ –∏ –Ω–µ–æ–±—ã—á–Ω—ã–µ.",
                "price": 1200000,  # 1,200,000 VND
                "photo_url": "https://images.unsplash.com/photo-1563241527-3004b7be0ffd?w=400",
                "is_popular": True,
                "is_express": False
            },
            {
                "name": "üíê –í–µ—Å–µ–Ω–Ω–∏–π –º–∏–∫—Å",
                "category": "mix",
                "description": "–°–º–µ—Å—å –≤–µ—Å–µ–Ω–Ω–∏—Ö —Ü–≤–µ—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö –æ—Ç—Ç–µ–Ω–∫–æ–≤. –°–≤–µ–∂–µ—Å—Ç—å –∏ –∫—Ä–∞—Å–æ—Ç–∞.",
                "price": 900000,  # 900,000 VND
                "photo_url": "https://images.unsplash.com/photo-1490750967868-88aa4486c946?w=400",
                "is_popular": False,
                "is_express": True
            },
            {
                "name": "ü§ç –ë–µ–ª—ã–µ –ª–∏–ª–∏–∏",
                "category": "mono",
                "description": "–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ –±–µ–ª—ã–µ –ª–∏–ª–∏–∏. –ß–∏—Å—Ç–æ—Ç–∞ –∏ –Ω–µ–∂–Ω–æ—Å—Ç—å.",
                "price": 700000,  # 700,000 VND
                "photo_url": "https://images.unsplash.com/photo-1574684891179-5d6c069ac4e0?w=400",
                "is_popular": False,
                "is_express": False
            },
            {
                "name": "üåπ –†–æ–∑—ã –ø—Ä–µ–º–∏—É–º",
                "category": "roses",
                "description": "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ —Ä–æ–∑—ã –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –î–ª—è –æ—Å–æ–±—ã—Ö —Å–ª—É—á–∞–µ–≤.",
                "price": 1500000,  # 1,500,000 VND
                "photo_url": "https://images.unsplash.com/photo-1520763185298-1b434c919102?w=400",
                "is_popular": True,
                "is_express": True
            }
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –±–∞–∑—É
        for product_data in products:
            product = Product(**product_data)
            db.add(product)
        
        db.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        roses_count = db.query(Product).filter(Product.category == 'roses').count()
        exotic_count = db.query(Product).filter(Product.category == 'exotic').count()
        mix_count = db.query(Product).filter(Product.category == 'mix').count()
        mono_count = db.query(Product).filter(Product.category == 'mono').count()
        popular_count = db.query(Product).filter(Product.is_popular == True).count()
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"üåπ –†–æ–∑—ã: {roses_count}")
        print(f"üå∫ –≠–∫–∑–æ—Ç–∏–∫–∞: {exotic_count}")
        print(f"üíê –ú–∏–∫—Å: {mix_count}")
        print(f"ü§ç –ú–æ–Ω–æ: {mono_count}")
        print(f"üî• –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ: {popular_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    add_test_products()
